[tox]
minversion = 1.8
envlist = py27,py35,py27-zookeeper,py35-zookeeper,py27-redis,py35-redis,py27-sentinel,py35-sentinel,py27-memcached,py35-memcached,py27-postgresql,py35-postgresql,py27-mysql,py35-mysql,py27-consul,py35-consul,pep8

[testenv]
# We need to install a bit more than just `test' because those drivers have
# custom tests that we always run
deps = .[test,zake,ipc,memcached,mysql,etcd]
    zookeeper: .[zookeeper]
    redis: .[redis]
    sentinel: .[redis]
    memcached: .[memcached]
    postgresql: .[postgresql]
    mysql: .[mysql]
    etcd: .[etcd]
    consul: .[consul]
commands = python setup.py testr --slowest --testr-args="{posargs}"

[testenv:venv]
# This target is used by the gate go run Sphinx to build the doc
deps = .[doc]
commands = {posargs}

[testenv:py27]
commands = python setup.py testr --slowest --testr-args="{posargs}"
    {toxinidir}/run-examples.sh

[testenv:py27-zookeeper]
commands = pifpaf -e TOOZ_TEST run zookeeper -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py35-zookeeper]
commands = pifpaf -e TOOZ_TEST run zookeeper -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py27-redis]
commands = pifpaf -e TOOZ_TEST run redis -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py35-redis]
commands = pifpaf -e TOOZ_TEST run redis -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py27-sentinel]
commands = pifpaf -e TOOZ_TEST run redis --sentinel -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py35-sentinel]
commands = pifpaf -e TOOZ_TEST run redis --sentinel -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py27-memcached]
commands = pifpaf -e TOOZ_TEST run memcached -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py35-memcached]
commands = pifpaf -e TOOZ_TEST run memcached -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py27-postgresql]
commands = pifpaf -e TOOZ_TEST run postgresql -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py35-postgresql]
commands = pifpaf -e TOOZ_TEST run postgresql -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py27-mysql]
commands = pifpaf -e TOOZ_TEST run mysql -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py35-mysql]
commands = pifpaf -e TOOZ_TEST run mysql -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py27-etcd]
commands = {toxinidir}/setup-etcd-env.sh pifpaf -g TOOZ_TEST run etcd --  python setup.py testr --slowest --testr-args="{posargs}"
           {toxinidir}/setup-etcd-env.sh pifpaf -g TOOZ_TEST run etcd --cluster --  python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py35-etcd]
commands = {toxinidir}/setup-etcd-env.sh pifpaf -g TOOZ_TEST run etcd -- python setup.py testr --slowest --testr-args="{posargs}"
           {toxinidir}/setup-etcd-env.sh pifpaf -g TOOZ_TEST run etcd --cluster -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py27-consul]
commands = {toxinidir}/setup-consul-env.sh pifpaf -g TOOZ_TEST run consul -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:py35-consul]
commands = {toxinidir}/setup-consul-env.sh pifpaf -g TOOZ_TEST run consul -- python setup.py testr --slowest --testr-args="{posargs}"

[testenv:cover]
commands = python setup.py testr --slowest --coverage --testr-args="{posargs}"

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:pep8]
deps = hacking<0.11,>=0.10.0
      doc8
commands =
    flake8
    doc8 doc/source

[flake8]
exclude=.venv,.git,.tox,dist,*egg,*.egg-info,build,examples,doc
show-source = True

[hacking]
import_exceptions = six.moves
    unittest.mock

[doc8]

ignore-path = doc/source/compatibility.rst,doc/source/history.rst
